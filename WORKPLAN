---+ Concurrent RDF workplan

  * Establish triple-GC

  * Establish expansion of triple hash-tables [OK]

  * Remove old locking code.

  * Establish compatible broadcasting

  * Reconsider handling of duplicate triples.  The problem:
    We have a set of triples with different life-span.  We must return
    one triple as long as the set is not empty for our query
    generation.

    - Old solution: assign a leader.  This is now unfeasible (I think)
    - New solution:
      - Maintain duplicate status, indicating that a predicate MAY have
        duplicates.  This means, set a duplicate flag on a triple if we
	added a duplicate triple.
      - When producing answers, put duplicate-marked triples in a
        (hash-)table and filter new duplicate triples according to
	this table.

  * Deal with subPropertyOf predicate clouds

  * Test framework
    - Controlled concurrency
    - Stress testing
